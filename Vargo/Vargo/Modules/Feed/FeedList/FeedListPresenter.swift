//
//  FeedListPresenter.swift
//  Vargo
//
//  Created by Andre Souza on 22/10/2018.
//  Copyright (c) 2018 Andre Souza. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class FeedListPresenter {

    // MARK: - Private properties -

    private var _view: FeedListViewInterface
    private var _interactor: FeedListInteractorInterface
    private var _wireframe: FeedListWireframeInterface
    
    private var _isLoading: Bool = false
    private var _feed: Feed = Feed()

    // MARK: - Lifecycle -

    init(wireframe: FeedListWireframeInterface, view: FeedListViewInterface, interactor: FeedListInteractorInterface) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
    }
}

// MARK: - FeedListPresenterInterface -

extension FeedListPresenter: FeedListPresenterInterface {
    
    func viewDidLoad() {
        _view.showFooterLoading(true)
        _view.showFenceLoading(false)
        requestFeedList()
    }
    
    func numberOfSections() -> Int {
        return 1
    }
    
    func numberOfItems() -> Int {
        return _feed.items.count
    }
    
    func didSelectItem(at indexPath: IndexPath) {
        guard let feedItem = _feed.items[safeIndex: indexPath.row] else { return }
        _wireframe.navigate(to: .detail(feedItem))
    }
    
    func item(at indexPath: IndexPath) -> FeedListItemInterface? {
        return _feed.items[safeIndex: indexPath.row]
    }
    
    func willDisplayCell(at indexPath: IndexPath) {
        let lastElement = numberOfItems() - 1
        if !_isLoading && indexPath.row == lastElement {
            requestFeedList()
        }
    }
    
}

// MARK: - FeedListPresenterInteractorInterface -

extension FeedListPresenter: FeedListPresenterInteractorInterface {
    
    func requestSuccess(_ feed: Feed) {
        _isLoading = false
        incrementFeed(feed)
    }
    
    func requestFailed(_ error: ErrorResponse) {
        _isLoading = false
        _view.showError(error, target: self, action: #selector(self.retryRequest))
    }
    
}

// MARK: - private funcs

extension FeedListPresenter {
    
    @objc private func retryRequest() {
        _view.showFooterLoading(false)
        _view.showFenceLoading(true)
        requestFeedList()
    }
    
   private func requestFeedList() {
        if _feed.page < _feed.totalPages {
            _isLoading = true
            _interactor.getFeed(page: (_feed.page+1))
        } else {
            _view.showFooterUpdatedMessage(message: "You're up to date! 🎉")
        }
    }
    
    private func incrementFeed(_ feed: Feed) {
        _feed.page = feed.page
        _feed.totalPages = feed.totalPages
        _feed.items.append(contentsOf: feed.items)
        refreshData()
    }
    
    private func refreshData() {
        _view.showFenceLoading(false)
        _view.showFooterLoading(true)
        _view.reloadData()
    }
    
}



